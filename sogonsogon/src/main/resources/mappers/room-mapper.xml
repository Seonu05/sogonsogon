<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="roomMapper">

   <resultMap type="Room" id="roomResultSet">
        <id property="roomNo" column="ROOM_NO"/>
        <result property="memberNo" column="ROOM_MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="roomTitle" column="ROOM_TITLE"/>
        <result property="roomContent" column="ROOM_CONTENT"/>
        <result property="roomPassword" column="ROOM_PWD"/>
        <result property="roomType" column="ROOM_TYPE"/>
        <result property="roomTypeName" column="ROOM_TYPE_NAME"/>
        <result property="roomCreateDate" column="ROOM_CREATE_DATE"/>
        <result property="roomModifyDate" column="ROOM_MODIFY_DATE"/>
        <result property="roomOpen" column="ROOM_OPEN"/>
        <result property="memberNick" column="MEMBER_NICK"/>
        <result property="roomTag" column="ROOM_TAG"/>
        <result property="roomMaxNumber" column="ROOM_MAX_NUMBER"/>
        <result property="roomMemberCount" column="ROOM_ENTER_NUMBER"/>
    </resultMap>
    
    <resultMap type="RoomMember" id="roomMemberResultSet">
        <id property="roomMemberRoomNo" column="ROOM_MEMBER_ROOM_NO"/>
        <result property="roomMemberMemberNo" column="ROOM_MEMBER_MEMBER_NO"/>
        <result property="roomMemberMemberGrade" column="ROOM_MEMBER_MEMBER_GRADE"/>
        <result property="roomMemberEnrollDate" column="ROOM_MEMBER_ENROLL_DATE"/>
        <result property="roomMemberNick" column="MEMBER_NICK"/>
        <result property="LikeCount" column="SUM_LIKE_COUNT"/>
    </resultMap>
    
    <!-- room 상세 정보 조회 쿼리 -->
   <select id="roomdetailInfo" parameterType="_int" resultMap="roomResultSet">
      SELECT ROOM_NO, ROOM_TITLE, ROOM_CONTENT, ROOM_CREATE_DATE, ROOM_STATUS, 
      MEMBER_NO, MEMBER_ID, ROOM_TYPE_NAME, ROOM_OPEN,ROOM_MEMBER_NO
      FROM STUDY_ROOM 
      JOIN MEMBER ON (ROOM_MEMBER_NO = MEMBER_NO)
      JOIN STUDY_ROOM_CATEGORY ON (ROOM_TYPE = ROOM_CATEGORY_NO)
      WHERE ROOM_NO = #{roomNo}
      AND ROOM_STATUS='Y'
   </select>
   
   <!-- room 패스워드 조회 쿼리 -->
   <select id="roomdetailInfoPwd" parameterType="_int" resultType="string">
      SELECT ROOM_PWD
      FROM STUDY_ROOM 
      WHERE ROOM_NO = #{roomNo}
      AND ROOM_OPEN = 'N'
      AND ROOM_STATUS = 'Y'
   </select>
   
   <!-- 방 회원 수 조회를 위한 쿼리 -->
   <select id="roomMemberCount" parameterType="_int" resultType="_int">
      SELECT COUNT(*)
      FROM ROOM_MEMBER
      WHERE ROOM_MEMBER_ROOM_NO = #{roomNo}
   </select>
   
   <!-- 즐겨찾기 리스트 조회 쿼리 -->
   <select id="roomMemberChk" parameterType="map" resultType="_int">
      SELECT COUNT(*)
      FROM ROOM_MEMBER
      WHERE ROOM_MEMBER_ROOM_NO = #{roomNo}
      AND ROOM_MEMBER_MEMBER_NO = #{memberNo}
   </select>
   
   <!-- 즐겨찾기 리스트 삽입 쿼리 -->
   <insert id="insertRoomMember" parameterType="map" >
      INSERT INTO ROOM_MEMBER VALUES(${roomNo}, ${memberNo}, 'G', DEFAULT)
   </insert>
   
   <!-- 페이징 처리용 조회 쿼리-->
   <select id="getListCount" parameterType="_int" resultType="_int">
      SELECT COUNT(*)
      FROM STUDY_ROOM
   </select>
   
   <!-- 방 리스트 조회 쿼리 -->
   <select id="selectList" parameterType="_int" resultMap="roomResultSet">
      SELECT ROOM_NO,ROOM_TYPE,ROOM_TITLE,MEMBER_NICK,ROOM_CREATE_DATE,ROOM_TAG,ROOM_OPEN,ROOM_MAX_NUMBER,ROOM_CONTENT,
       (SELECT COUNT(*) FROM ROOM_MEMBER WHERE ROOM_MEMBER_ROOM_NO = STUDY_ROOM.ROOM_NO GROUP BY ROOM_MEMBER_ROOM_NO) ROOM_ENTER_NUMBER
        FROM STUDY_ROOM
        JOIN MEMBER ON(ROOM_MEMBER_NO=MEMBER_NO)
        WHERE ROOM_STATUS = 'Y'
        ORDER BY ROOM_NO DESC
   </select>
   
   <!-- 방 입장용 조회 쿼리 -->
   <select id="enterRoom" parameterType="Room" resultMap="roomResultSet">
      SELECT ROOM_PWD FROM STUDY_ROOM
      WHERE ROOM_NO= #{roomNo}
      AND ROOM_STATUS = 'Y'
   </select>
   
   <insert id="createRoom"  parameterType="Room" >
      INSERT INTO STUDY_ROOM VALUES (SEQ_ROOM.NEXTVAL, #{memberNo}, #{roomTitle}, #{roomContent}, #{roomPassword}
      ,#{roomType}, DEFAULT,DEFAULT, DEFAULT,#{roomOpen}, #{roomTag}, #{roomMaxNumber},DEFAULT)
   </insert>
   
   <select id="roomMList" parameterType="_int"  resultType="Room" resultMap="roomResultSet">
         SELECT ROOM_TITLE,ROOM_CONTENT,ROOM_PWD,ROOM_OPEN
         FROM STUDY_ROOM
         WHERE ROOM_NO=#{roomNo}
   </select>
   
   <select id="selectRoomMember" parameterType="_int" resultType="list"   resultMap="roomMemberResultSet">
      SELECT ROOM_MEMBER_ROOM_NO 
      FROM ROOM_MEMBER
      WHERE  ROOM_MEMBER_MEMBER_NO = #{roomMemberRoomNo}
   </select>
   
   <select id="selectOption" parameterType="_int" resultType="list" resultMap="roomResultSet">
      SELECT ROOM_NO,ROOM_TYPE,ROOM_TITLE,MEMBER_NICK,ROOM_CREATE_DATE,ROOM_TAG,ROOM_OPEN,ROOM_MAX_NUMBER
        FROM STUDY_ROOM
      JOIN MEMBER ON(ROOM_MEMBER_NO=MEMBER_NO)
      WHERE ROOM_TYPE = #{roomType}
        ORDER BY ROOM_NO DESC
   </select>
   
   <!-- 페이징 처리용 조회 쿼리-->
   <select id="getListCount2" parameterType="_int" resultType="_int">
      SELECT COUNT(*)
      FROM STUDY_ROOM
      WHERE ROOM_TYPE = #{roomType}
   </select>
   
   <!-- 검색 조회용 페이징 위한 쿼리 -->
   <select id="getListCount3" parameterType="_int" resultType="_int">
      SELECT COUNT(*)
      FROM STUDY_ROOM
      <bind name="sv" value="'%' + search + '%'"/> 
      WHERE ROOM_TITLE LIKE '${sv}'
      OR ROOM_TAG LIKE '${sv}'
   </select>
   
   <!-- 검색 조회용 쿼리 -->
   <select id="searchList" parameterType="string" resultType="list" resultMap="roomResultSet">
      SELECT *
      FROM STUDY_ROOM
      JOIN MEMBER ON(ROOM_MEMBER_NO=MEMBER_NO)
      <bind name="sv" value="'%' + search + '%'"/> 
      WHERE ROOM_TITLE LIKE '${sv}'
      OR ROOM_TAG LIKE '${sv}'
   </select>
   
   <select id="mainRoomList"  resultType="list"  resultMap="roomResultSet">
      SELECT * FROM (SELECT ROOM_NO,ROOM_TYPE,ROOM_TITLE,MEMBER_NICK,ROOM_CREATE_DATE,ROOM_TAG,ROOM_OPEN,ROOM_MAX_NUMBER,ROOM_CONTENT,
      (SELECT COUNT(*) FROM ROOM_MEMBER WHERE ROOM_MEMBER_ROOM_NO = STUDY_ROOM.ROOM_NO GROUP BY ROOM_MEMBER_ROOM_NO) ROOM_ENTER_NUMBER
      FROM STUDY_ROOM JOIN MEMBER ON(ROOM_MEMBER_NO=MEMBER_NO)
      WHERE ROOM_STATUS = 'Y' ORDER BY ROOM_NO DESC)
      <![CDATA[ WHERE ROWNUM <=4 ]]>
   </select>
   

   <!-- 게시글 작성  갯수 조회 쿼리-->
   <select id="writeBoardCount" parameterType="map" resultType="_int">
      SELECT COUNT(*)
      FROM ROOMBOARD
      WHERE  ROOM_NO = #{roomNo}
      AND ROOM_BOARD_WRITER = #{memberNo}
      AND ROOM_BOARD_STATUS = 'Y'
   </select>
   
   <!-- 게시글  댓글 작성 갯수 조회 쿼리-->
   <select id="writeBoardReplyCount" parameterType="map" resultType="_int">
      SELECT COUNT(*)
      FROM ROOM_BOARD_REPLY
      WHERE ROOM_BOARD_REPLY_WRITER = #{memberNo}
      AND ROOM_BOARD_PARENT_BOARD_NO IN (SELECT ROOM_BOARD_NO FROM ROOMBOARD WHERE ROOM_NO = #{roomNo} AND ROOM_BOARD_STATUS = 'Y')
   </select>

   
   <!-- 메인 좋아요순 top3 조회 -->
   <select id="mainLikeList"  resultType="list"  resultMap="roomMemberResultSet">
        SELECT * FROM
            (SELECT ROOM_BOARD_WRITER, MEMBER_NICK, SUM(LIKE_COUNT) SUM_LIKE_COUNT 
            FROM(
                SELECT ROOM_BOARD_WRITER, MEMBER_NICK, LIKE_ROOM_BOARD_NO, COUNT(*) LIKE_COUNT
                FROM ROOM_BOARD_LIKE
                JOIN ROOMBOARD ON(ROOM_BOARD_NO = LIKE_ROOM_BOARD_NO)
                JOIN MEMBER ON(ROOM_BOARD_WRITER = MEMBER_NO)
                WHERE NOT ROOM_BOARD_WRITER = 1
                GROUP BY ROOM_BOARD_WRITER, MEMBER_NICK, LIKE_ROOM_BOARD_NO)
            GROUP BY ROOM_BOARD_WRITER, MEMBER_NICK
            ORDER BY SUM_LIKE_COUNT DESC)
       <![CDATA[ WHERE ROWNUM <=3 ]]>
   </select>
   

   <!-- 댓글 채택 갯수 조회 쿼리 -->
   <select id="writeBoardReplyAdoptionCount" parameterType="map" resultType="_int">
      SELECT COUNT(*) FROM ROOM_BOARD_REPLY_ADOPTION
      JOIN ROOM_BOARD_REPLY ON (ROOM_BOARD_REPLY_NO = ADOPTION_REPLY_NO)
      JOIN ROOMBOARD ON (ROOM_BOARD_NO = ROOM_BOARD_PARENT_BOARD_NO)
      WHERE ROOM_BOARD_REPLY_WRITER = #{memberNo}
      AND ROOM_NO = #{roomNo}
      AND ROOM_BOARD_STATUS = 'Y'
   </select>
   
   <!-- 방 회원 탈퇴 -->
   <delete id="withDraw">
      DELETE FROM ROOM_MEMBER WHERE ROOM_MEMBER_ROOM_NO = #{roomNo} AND ROOM_MEMBER_MEMBER_NO = #{memberNo}
   </delete>
   
   <!-- 방 회원 정보 조회 쿼리 -->
   <select id="memberInfo" parameterType="_int" resultType="list"  resultMap="roomMemberResultSet">
		SELECT ROOM_MEMBER_MEMBER_NO, MEMBER_ID, MEMBER_NICK, ROOM_MEMBER_ENROLL_DATE
		FROM ROOM_MEMBER
		JOIN MEMBER ON (MEMBER_NO = ROOM_MEMBER_MEMBER_NO)
		WHERE MEMBER_STATUS = 'Y'
		AND ROOM_MEMBER_ROOM_NO = #{roomNo}
   </select>

	<delete id="memberInfoDelete" parameterType="map">
		DELETE FROM ROOM_MEMBER WHERE ROOM_MEMBER_ROOM_NO = #{roomNo} AND ROOM_MEMBER_MEMBER_NO = #{memberNo}
	</delete>
	
	
	<select id="updateRoomList" resultMap="roomResultSet">
		SELECT * FROM STUDY_ROOM
		WHERE ROOM_NO = #{roomNo}
	</select>
	
	<update id="updateRoomInsert" parameterType="Room">
		UPDATE STUDY_ROOM SET 
		ROOM_TITLE=#{roomTitle}, ROOM_OPEN=#{roomOpen}, ROOM_PWD=#{roomPassword},
		ROOM_TYPE=#{roomType}, ROOM_MAX_NUMBER=#{roomMaxNumber}, 
		ROOM_CONTENT=#{roomContent}, ROOM_TAG=#{roomTag}, ROOM_MODIFY_DATE=SYSDATE
		WHERE ROOM_NO=#{roomNo}
	</update>
	
	<!-- <insert id="insertMember" parameterType="map">
		INSERT INTO ROOM_MEMBER VALUES(#{roomNo}, #{memberNo})
	</insert> -->
	
</mapper>

