<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="roomBoardMapper">

	<resultMap type="RoomBoard" id="roomBoardResultSet">
        <id property="roomBoardNo" column="ROOM_BOARD_NO"/>
        <result property="roomNo" column="ROOM_NO"/>
        <result property="roomBoardType" column="ROOM_BOARD_TYPE"/>
        <result property="roomBoardTitle" column="ROOM_BOARD_TITLE"/>
        <result property="roomBoardContent" column="ROOM_BOARD_CONTENT"/>
        <result property="roomBoardWriterNo" column="ROOM_BOARD_WRITER"/>
        <result property="roomBoardCreateDate" column="ROOM_BOARD_CREATE_DATE"/>
        <result property="roomBoardModifyDate" column="ROOM_BOARD_MODIFY_DATE"/>
        <result property="roomBoardReadCount" column="ROOM_BOARD_READ_COUNT"/>
        <result property="roomBoardWriter" column="MEMBER_ID"/>
        <result property="roomBoardLikeCount" column="ROOM_BOARD_LIKE_COUNT"/>
    </resultMap>
    
    <resultMap type="RoomBoardAttachment" id="roomBoardAttachmentResultSet">
    	<id property="fileNo" column="ROOM_BOARD_FILE_NO"></id>
    	<result property="parentBoardNo" column="ROOM_BOARD_PARENT_BOARD_NO"/>
    	<result property="fileOriginName" column="ROOM_BOARD_IMG_ORIGIN_NM"/>
    	<result property="fileChangeName" column="ROOM_BOARD_IMG_CHANGE_NM"/>
    	<result property="filePath" column="ROOM_BOARD_FILE_PATH"/>
    	<result property="fileLevel" column="ROOM_BOARD_FILE_LEVEL"/>
    </resultMap>
    
	<select id="roomBoardSelectList" parameterType="_int" resultMap="roomBoardResultSet">
		SELECT ROOM_BOARD_NO, ROOM_BOARD_TYPE, ROOM_BOARD_TITLE, MEMBER_ID, ROOM_BOARD_CREATE_DATE, ROOM_BOARD_READ_COUNT, ROOM_BOARD_TYPE, ROOM_BOARD_MODIFY_DATE,
				(SELECT COUNT(*) FROM ROOM_BOARD_LIKE WHERE LIKE_ROOM_BOARD_NO = ROOM_BOARD_NO) AS ROOM_BOARD_LIKE_COUNT
		FROM ROOMBOARD
		JOIN MEMBER ON (ROOM_BOARD_WRITER = MEMBER_NO)
		WHERE ROOM_NO = #{roomNo}
		AND ROOM_BOARD_STATUS = 'Y'
		ORDER BY DECODE(ROOMBOARD.ROOM_BOARD_TYPE, '공지', 1, NULL) ASC, ROOM_BOARD_NO DESC
	</select>
	
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM ROOMBOARD
		WHERE ROOM_NO = #{roomNo}
	</select>
	
	<!-- 게시글 삭제용 쿼리 -->
	<update id="deleteBoard" parameterType="_int">
		UPDATE ROOMBOARD SET ROOM_BOARD_STATUS = 'N' WHERE ROOM_BOARD_NO = #{boardNo}
	</update>
	
	<!-- 게시글 상세 조회 -->
	<select id="selectBoard" parameterType="_int" resultMap="roomBoardResultSet">
		SELECT ROOM_BOARD_NO, ROOM_BOARD_TYPE, ROOM_BOARD_TITLE,ROOM_BOARD_CONTENT, MEMBER_ID, ROOM_BOARD_CREATE_DATE, ROOM_BOARD_MODIFY_DATE, ROOM_BOARD_READ_COUNT
		FROM ROOMBOARD
		JOIN MEMBER ON (ROOM_BOARD_WRITER = MEMBER_NO)
		WHERE ROOM_BOARD_NO = #{boardNo} 
		AND ROOM_BOARD_STATUS = 'Y'
	</select>
	
	<!-- 조회 수 증가 쿼리 -->
	<update id="increaseCount" parameterType="_int">
		UPDATE ROOMBOARD SET
		ROOM_BOARD_READ_COUNT = ROOM_BOARD_READ_COUNT+1
		WHERE ROOM_BOARD_NO = #{boardNo}
	</update>
	
	<!-- 다음 게시글 번호 조회 -->
    <select id="selectNextNo" resultType="_int">
        SELECT SEQ_ROOMBOARD.NEXTVAL FROM DUAL
    </select>
    
    <!-- 게시글 삽입 -->
    <insert id="insertBoard" parameterType="RoomBoard">
      INSERT INTO ROOMBOARD
      VALUES (#{roomBoardNo},#{roomNo},#{roomBoardType},#{roomBoardTitle},#{roomBoardContent}, #{roomBoardWriter}, DEFAULT, SYSDATE, DEFAULT, 0)
   </insert>
   
      <!-- 파일 정보 삽입 -->
   <insert id="insertAttachment" parameterType="RoomBoardAttachment">
   		INSERT INTO ROOM_BOARD_IMAGE VALUES(
   			SEQ_RB_FNO.NEXTVAL, #{fileOriginName}, #{fileChangeName}, #{filePath}, #{parentBoardNo}, #{fileLevel}
   		)
   </insert>
   
   <!-- 게시글 이미지 조회 -->
   <select id="selectFiles" parameterType="_int" resultMap="roomBoardAttachmentResultSet">
   		SELECT * FROM ROOM_BOARD_IMAGE
   		WHERE ROOM_BOARD_PARENT_BOARD_NO = #{boardNo}
   		ORDER BY ROOM_BOARD_FILE_LEVEL
   </select>
   
   <!-- 파일 정보 삭제 -->
   <delete id="deleteAttachment" parameterType="_int">
   		DELETE FROM ROOM_BOARD_IMAGE
   		WHERE ROOM_BOARD_PARENT_BOARD_NO = #{boardNo}
   </delete>
   
   <!-- 썸네일 목록 조회 -->
   <select id="selectThumbnailList" parameterType="list" resultMap="roomBoardAttachmentResultSet">
   		SELECT * FROM ROOM_BOARD_IMAGE
   		WHERE ROOM_BOARD_FILE_LEVEL = 0
   		AND ROOM_BOARD_PARENT_BOARD_NO IN
   		<!-- 동적 퀴리 foreach : 특정 collection 객체를 반복 접근하는 구문 -->
   		<!-- 
   			collection : 반복 접근할 객체
   			index : 현재 접근 중인 index
   			item : 현재 접근 중인 요소
   			open : 반복문 시작 시 추가할 구문
   			close : 반복문 종료 시 추가할 구문
   			separator : 구분자
   		 --> 
   		<foreach collection="list" index="i" item="roomBoard"
   			open="(" close=")" separator=",">
   			#{roomBoard.roomBoardNo}
   		</foreach> 
   </select>
   
   <!-- 게시글 수정 -->
   <update id="updateBoard" parameterType="RoomBoard">
   		UPDATE ROOMBOARD SET
   		ROOM_BOARD_TITLE = #{roomBoardTitle}, ROOM_BOARD_CONTENT = #{roomBoardContent},
   		ROOM_BOARD_MODIFY_DATE = SYSDATE, ROOM_BOARD_TYPE = #{roomBoardType}
   		WHERE ROOM_BOARD_NO = #{roomBoardNo}
   </update>
   
   <!-- 파일 정보 수정 -->
   <update id="updateAttachment" parameterType="RoomBoardAttachment">
   		UPDATE ROOM_BOARD_IMAGE SET
   		ROOM_BOARD_IMG_ORIGIN_NM = #{fileOriginName},
   		ROOM_BOARD_IMG_CHANGE_NM = #{fileChangeName}
   		WHERE ROOM_BOARD_FILE_NO = #{fileNo}
   </update>
   
   <!-- 파일 1개 정보 삭제 -->
   <delete id="deleteAttachment2" parameterType="_int">
   		DELETE FROM ROOM_BOARD_IMAGE
   		WHERE ROOM_BOARD_FILE_NO = #{fileNo}
   </delete>
   
   <!-- 검색 조건이 포함된 전체 게시글 수 조회 -->
   <select id="getSearchListCount" parameterType="map" resultType="_int">
   		SELECT COUNT(*) FROM ROOMBOARD
   		JOIN MEMBER ON (ROOM_BOARD_WRITER = MEMBER_NO)
   		<!-- Map 객체를 사용할 경우 key값을 호출하면 해당 value값을 얻을 수 있음 -->
   		WHERE ROOM_NO  = #{roomNo}
   		AND ROOM_BOARD_STATUS = 'Y'
   		<!-- Map 객체에 존재하는 key값이 search인 요소의 sVal필드 값이 null이 아닐 경우 -->
   		<if test="search.sVal != null">
   			<!-- bind 태그 : 동적 sql 구문 내에서 사용할 변수 선언 -->
   			<bind name="sv" value="'%' + search.sVal + '%'"/>
   			AND
   			
   			<choose>
   				<when test="search.sKey == 'title'">
   					ROOM_BOARD_TITLE LIKE #{sv}
   				</when>
   				<when test="search.sKey == 'boardGroup'">
   					ROOM_BOARD_TYPE LIKE #{sv}
   				</when>
   				<otherwise>
   				    MEMBER_ID LIKE #{sv}
   				</otherwise>
   			</choose>
   		</if>
   </select>
   
   <!-- 검색 게시글 목록 조회 -->
   <select id="selectSearchList" parameterType="map" resultMap="roomBoardResultSet">
   		SELECT ROOM_BOARD_NO, ROOM_BOARD_TYPE, ROOM_BOARD_TITLE, MEMBER_ID, ROOM_BOARD_CREATE_DATE, ROOM_BOARD_READ_COUNT, ROOM_BOARD_TYPE, ROOM_BOARD_MODIFY_DATE,
   				(SELECT COUNT(*) FROM ROOM_BOARD_LIKE WHERE LIKE_ROOM_BOARD_NO = ROOM_BOARD_NO) AS ROOM_BOARD_LIKE_COUNT
   		FROM ROOMBOARD
   		JOIN MEMBER ON (ROOM_BOARD_WRITER = MEMBER_NO)
   		<!-- Map 객체를 사용할 경우 key값을 호출하면 해당 value값을 얻을 수 있음 -->
   		WHERE ROOM_NO = #{type}
   		AND ROOM_BOARD_STATUS = 'Y'
   		<!-- Map 객체에 존재하는 key값이 search인 요소의 sVal필드 값이 null이 아닐 경우 -->
   		<if test="search.sVal != null">
   			<!-- bind 태그 : 동적 sql 구문 내에서 사용할 변수 선언 -->
   			<bind name="sv" value="'%' + search.sVal + '%'"/>
   			AND
   			
   			<choose>
   				<when test="search.sKey == 'title'">
   					ROOM_BOARD_TITLE LIKE #{sv}
   				</when>
   				<when test="search.sKey == 'boardGroup'">
   					ROOM_BOARD_TYPE LIKE #{sv}
   				</when>
   				<otherwise>
   				    MEMBER_ID LIKE #{sv}
   				</otherwise>
   			</choose>
   		</if>
   		ORDER BY DECODE(ROOMBOARD.ROOM_BOARD_TYPE, '공지', 1, NULL) ASC, ROOM_BOARD_NO DESC
   </select>
   
   <!-- 게시글 좋아요 체크 -->
   <select id="boardLikeChk" parameterType="map" resultType="_int">
   		SELECT COUNT(*)
   		FROM ROOM_BOARD_LIKE
   		WHERE LIKE_ROOM_BOARD_NO = #{roomBoardNo}
   		AND LIKE_MEMBER_NO = #{memberNo}
   </select>
   
   <!-- 게시글 좋아요 등록 -->
   <insert id="boardLikeAdd" parameterType="map">
   		INSERT INTO ROOM_BOARD_LIKE VALUES (#{roomBoardNo}, #{memberNo})
   </insert>
   
   <!-- 게시글 좋아요 삭제 -->
   <delete id="boardLikeDelete" parameterType="map">
   		DELETE FROM ROOM_BOARD_LIKE
   		WHERE LIKE_ROOM_BOARD_NO = #{roomBoardNo}
   		AND LIKE_MEMBER_NO = #{memberNo} 
   </delete>
   
   <!-- 게시글 좋아요 갯수 -->
   <select id="boardLikeCount" parameterType="_int" resultType="_int">
      	SELECT COUNT(*)
   		FROM ROOM_BOARD_LIKE
   		WHERE LIKE_ROOM_BOARD_NO = #{roomBoardNo}
   </select>
   
   <!-- 게시글 신고 -->
   <update id="reportBoard" parameterType="_int">
   		UPDATE ROOMBOARD SET ROOM_BOARD_STATUS = 'R' WHERE ROOM_BOARD_NO = #{boardNo}
   </update>
   
   <!-- 게시글 작성 시 방장 확인용 쿼리 -->
   <select id="boardChiefNo" parameterType="_int" resultType="_int">
   		SELECT ROOM_MEMBER_NO FROM STUDY_ROOM WHERE ROOM_NO = #{roomNo}
   </select>
</mapper>
